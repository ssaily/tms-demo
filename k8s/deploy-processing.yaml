apiVersion: apps/v1
kind: Deployment
metadata:
  name: tms-demo-enrichment
  namespace: tms-demo
  labels:
    app: tms-demo-enrichment
  annotations:
    "sidecar.jaegertracing.io/inject": "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tms-demo-enrichment
  template:
    metadata:
      labels:
        app: tms-demo-enrichment
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: tms-demo-enrichment
        image: ssaily/tms-demo-processing:0.8.0
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: enrichment
          - name: JAVA_OPTS
            value: "-javaagent:./jmx_prometheus_javaagent-0.18.0.jar=9091:kafka-client.yaml"
          - name: TRACING_OPTS
            value: " -javaagent:./opentelemetry-javaagent.jar -Dotel.traces.exporter=otlp -Dotel.metrics.exporter=none -Dotel.exporter.otlp.endpoint=http://simple-aiven-collector-headless.tms-demo.svc:4317/"
          - name: OTEL_SERVICE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
          - name: OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED
            value: "false"
          - name: JAEGER_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        envFrom:
          - secretRef:
              name: kafka-secrets
          - secretRef:
              name: tms-service-endpoint
        volumeMounts:
        - mountPath: /etc/streams/tms-processing-cert
          name: cert-volume
        resources:
          limits:
            memory: 1024Mi
            cpu: "2"
          requests:
            memory: 512Mi
            cpu: "100m"
        imagePullPolicy: Always
        ports:
        - name: metrics
          containerPort: 9091
      volumes:
        - name: cert-volume
          secret:
            secretName: tms-processing-cert
            items:
            - key: client.keystore.p12
              path: client.keystore.p12
            - key: client.truststore.jks
              path: client.truststore.jks
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tms-demo-calculations
  namespace: tms-demo
  labels:
    app: tms-demo-calculations
  annotations:
    "sidecar.jaegertracing.io/inject": "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tms-demo-calculations
  template:
    metadata:
      labels:
        app: tms-demo-calculations
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: tms-demo-calculations
        image: ssaily/tms-demo-processing:0.8.0
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: calculations
          - name: JAVA_OPTS
            value: "-javaagent:./jmx_prometheus_javaagent-0.18.0.jar=9091:kafka-client.yaml"
          - name: TRACING_OPTS
            value: " -javaagent:./opentelemetry-javaagent.jar -Dotel.traces.exporter=otlp -Dotel.metrics.exporter=none -Dotel.exporter.otlp.endpoint=http://simple-aiven-collector-headless.tms-demo.svc:4317/"
          - name: OTEL_SERVICE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
          - name: OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED
            value: "false"
          - name: JAEGER_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        envFrom:
          - secretRef:
              name: kafka-secrets
          - secretRef:
              name: tms-service-endpoint
        volumeMounts:
        - mountPath: /etc/streams/tms-processing-cert
          name: tms-processing-cert
        resources:
          limits:
            memory: 1024Mi
            cpu: "2"
          requests:
            memory: 512Mi
            cpu: "100m"
        imagePullPolicy: Always
      volumes:
        - name: tms-processing-cert
          secret:
            secretName: tms-processing-cert
            items:
            - key: client.keystore.p12
              path: client.keystore.p12
            - key: client.truststore.jks
              path: client.truststore.jks
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tms-demo-multivariate
  namespace: tms-demo
  labels:
    app: tms-demo-multivariate
  annotations:
    "sidecar.jaegertracing.io/inject": "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tms-demo-multivariate
  template:
    metadata:
      labels:
        app: tms-demo-multivariate
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: tms-demo-multivariate
        image: ssaily/tms-demo-processing:0.8.0
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: multivariate
          - name: JAVA_OPTS
            value: "-javaagent:./jmx_prometheus_javaagent-0.18.0.jar=9091:kafka-client.yaml"
          - name: TRACING_OPTS
            value: " -javaagent:./opentelemetry-javaagent.jar -Dotel.traces.exporter=otlp -Dotel.metrics.exporter=none -Dotel.exporter.otlp.endpoint=http://simple-aiven-collector-headless.tms-demo.svc:4317/"
          - name: OTEL_SERVICE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
          - name: OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED
            value: "false"
          - name: JAEGER_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        envFrom:
          - secretRef:
              name: kafka-secrets
          - secretRef:
              name: tms-service-endpoint
        volumeMounts:
        - mountPath: /etc/streams/tms-processing-cert
          name: tms-processing-cert
        resources:
          limits:
            memory: 2048Mi
            cpu: "2"
          requests:
            memory: 1024Mi
            cpu: "100m"
        imagePullPolicy: Always
      volumes:
        - name: tms-processing-cert
          secret:
            secretName: tms-processing-cert
            items:
            - key: client.keystore.p12
              path: client.keystore.p12
            - key: client.truststore.jks
              path: client.truststore.jks
---
apiVersion: v1
kind: Service
metadata:
  name: tms-demo-enrichment-svc
  namespace: tms-demo
  labels:
    app: tms-demo-enrichment
spec:
  ports:
    - name: metrics
      port: 9091
  selector:
    app: tms-demo-enrichment
---
apiVersion: v1
kind: Service
metadata:
  name: tms-demo-calculations-svc
  namespace: tms-demo
  labels:
    app: tms-demo-calculations
spec:
  ports:
    - name: metrics
      port: 9091
      targetPort: 9091
      protocol: TCP
  selector:
    app: tms-demo-calculations
---
apiVersion: v1
kind: Service
metadata:
  name: tms-demo-multivariate-svc
  namespace: tms-demo
  labels:
    app: tms-demo-multivariate
spec:
  ports:
    - name: metrics
      port: 9091
      targetPort: 9091
      protocol: TCP
  selector:
    app: tms-demo-multivariate

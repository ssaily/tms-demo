apiVersion: apps/v1
kind: Deployment
metadata:
  name: tms-demo-ksqldb
  namespace: tms-demo
  labels:
    app: tms-demo-ksqldb
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tms-demo-ksqldb
  template:
    metadata:
      labels:
        app: tms-demo-ksqldb
    spec:
      containers:
      - name: tms-demo-ksqldb
        image: confluentinc/ksqldb-server:0.20.0
        envFrom:
          - secretRef:
              name: kafka-secrets
          - secretRef:
              name: tms-service-endpoint
        env:
          - name: KSQL_BOOTSTRAP_SERVERS
            value: $(BOOTSTRAP_SERVERS)
          - name: KSQL_LISTENERS
            value: http://0.0.0.0:8088/
          - name: KSQL_KSQL_SERVICE_ID
            value: tms_demo_ksqldb_
          - name: KSQL_KSQL_SINK_REPLICAS
            value: "3"
          - name: KSQL_KSQL_STREAMS_REPLICATION_FACTOR
            value: "3"
          - name: KSQL_KSQL_INTERNAL_TOPIC_REPLICAS
            value: "3"
          - name: KSQL_SECURITY_PROTOCOL
            value: SSL
          - name: KSQL_SSL_KEYSTORE_TYPE
            value: PKCS12
          - name: KSQL_SSL_KEYSTORE_LOCATION
            value: /etc/streams/tms-processing-cert/client.keystore.p12
          - name: KSQL_SSL_KEYSTORE_PASSWORD
            value: $(keystore-password)
          - name: KSQL_SSL_KEY_PASSWORD
            value: $(key-password)
          - name: KSQL_SSL_TRUSTSTORE_TYPE
            value: JKS
          - name: KSQL_SSL_TRUSTSTORE_LOCATION
            value: /etc/streams/tms-processing-cert/client.truststore.jks
          - name: KSQL_SSL_TRUSTSTORE_PASSWORD
            value: $(truststore-password)
          - name: KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE
            value: URL
          - name: KSQL_KSQL_SCHEMA_REGISTRY_URL
            value: $(SCHEMA_REGISTRY)
          - name: KSQL_CONFLUENT_SUPPORT_METRICS_ENABLE
            value: "false"
          - name: KSQL_KSQL_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION
            value: /etc/streams/tms-processing-cert/schema_registry.truststore.jks
          - name: KSQL_KSQL_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD
            value: $(truststore-password)
        volumeMounts:
          - mountPath: /etc/streams/tms-processing-cert
            name: tms-processing-cert
        resources:
          limits:
            memory: 512Mi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: "100m"
        imagePullPolicy: Always
      volumes:
        - name: tms-processing-cert
          secret:
            secretName: tms-processing-cert
            items:
            - key: client.keystore.p12
              path: client.keystore.p12
            - key: client.truststore.jks
              path: client.truststore.jks
            - key: schema_registry.truststore.jks
              path: schema_registry.truststore.jks
---
apiVersion: v1
kind: Service
metadata:
  name: ksqldb-server
  namespace: tms-demo
spec:
  selector:
    app: tms-demo-ksqldb
  ports:
  - protocol: TCP
    port: 8088
    targetPort: 8088
